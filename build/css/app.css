/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
     ========================================================================== */
/**
   * Remove the margin in all browsers.
   */
body {
  margin: 0;
}

/**
   * Render the `main` element consistently in IE.
   */
main {
  display: block;
}

/**
   * Correct the font size and margin on `h1` elements within `section` and
   * `article` contexts in Chrome, Firefox, and Safari.
   */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
     ========================================================================== */
/**
   * 1. Add the correct box sizing in Firefox.
   * 2. Show the overflow in Edge and IE.
   */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
     ========================================================================== */
/**
   * Remove the gray background on active links in IE 10.
   */
a {
  background-color: transparent;
}

/**
   * 1. Remove the bottom border in Chrome 57-
   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
   */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted; /* 2 */
}

/**
   * Add the correct font weight in Chrome, Edge, and Safari.
   */
b,
strong {
  font-weight: bolder;
}

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
   * Add the correct font size in all browsers.
   */
small {
  font-size: 80%;
}

/**
   * Prevent `sub` and `sup` elements from affecting the line height in
   * all browsers.
   */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
     ========================================================================== */
/**
   * Remove the border on images inside links in IE 10.
   */
img {
  border-style: none;
}

/* Forms
     ========================================================================== */
/**
   * 1. Change the font styles in all browsers.
   * 2. Remove the margin in Firefox and Safari.
   */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
   * Show the overflow in IE.
   * 1. Show the overflow in Edge.
   */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
   * Remove the inheritance of text transform in Edge, Firefox, and IE.
   * 1. Remove the inheritance of text transform in Firefox.
   */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
   * Correct the inability to style clickable types in iOS and Safari.
   */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
   * Remove the inner border and padding in Firefox.
   */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
   * Restore the focus styles unset by the previous rule.
   */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
   * Correct the padding in Firefox.
   */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
   * 1. Correct the text wrapping in Edge and IE.
   * 2. Correct the color inheritance from `fieldset` elements in IE.
   * 3. Remove the padding so developers are not caught out when they zero out
   *    `fieldset` elements in all browsers.
   */
legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
   * Add the correct vertical alignment in Chrome, Firefox, and Opera.
   */
progress {
  vertical-align: baseline;
}

/**
   * Remove the default vertical scrollbar in IE 10+.
   */
textarea {
  overflow: auto;
}

/**
   * 1. Add the correct box sizing in IE 10.
   * 2. Remove the padding in IE 10.
   */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
   * Correct the cursor style of increment and decrement buttons in Chrome.
   */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
   * 1. Correct the odd appearance in Chrome and Safari.
   * 2. Correct the outline style in Safari.
   */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
   * Remove the inner padding in Chrome and Safari on macOS.
   */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
   * 1. Correct the inability to style clickable types in iOS and Safari.
   * 2. Change font properties to `inherit` in Safari.
   */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
     ========================================================================== */
/*
   * Add the correct display in Edge, IE 10+, and Firefox.
   */
details {
  display: block;
}

/*
   * Add the correct display in all browsers.
   */
summary {
  display: list-item;
}

/* Misc
     ========================================================================== */
/**
   * Add the correct display in IE 10+.
   */
template {
  display: none;
}

/**
   * Add the correct display in IE 10.
   */
[hidden] {
  display: none;
}

html {
  font-size: 62.5%;
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  font-family: "Roboto", sans-serif;
  font-size: 1.6rem;
  background-color: #ebe7de;
}

p {
  color: #000;
  font-size: 1.6rem;
  line-height: 2;
}

.container {
  width: 90%;
  max-width: 120rem;
  margin: 0 auto;
}

a {
  text-decoration: none;
  color: #000;
}

img {
  max-width: 100%;
  display: block;
  height: auto;
}

ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

h1,
h2,
.heading-white,
h3 {
  font-family: "Raleway", sans-serif;
  margin: 0 0 5rem 0;
  text-transform: uppercase;
  text-align: center;
  line-height: 1.5;
}

h1 {
  font-size: 4rem;
}

h2, .heading-white {
  font-size: 3.6rem;
  color: #5e311e;
}
h2 span, .heading-white span {
  color: #c39c63;
  font-size: 1.8rem;
  display: block;
}
h2::after, .heading-white::after {
  content: "";
  display: block;
  width: 10rem;
  height: 10rem;
  margin: 0 auto;
  background-image: url(../../build/img/cafe.svg);
  background-size: 10rem;
}

.heading-white {
  color: #fff;
}
.heading-white span {
  color: #fff;
}
.heading-white::after {
  display: none;
}

h3 {
  font-size: 3.2rem;
}

.header {
  padding: 5rem 0;
  position: relative;
  background-repeat: no-repeat;
  background-size: cover;
}
@media (min-width: 768px) {
  .header {
    min-height: 70rem;
  }
}
.header::before {
  content: "";
  background-color: #000;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  opacity: 0.6;
}
.header .header-content {
  position: relative;
}
.header .header-content h1 {
  text-align: center;
  color: #fff;
  text-transform: uppercase;
  margin-top: 5rem;
}
@media (min-width: 768px) {
  .header .header-content h1 {
    margin-top: 10rem;
  }
}

.header-home {
  background-image: url(../../../build/img/header_inicio.jpg);
}

.header-about {
  background-image: url(../../../build/img/header_nosotros.jpg);
}

.header-proccess {
  background-image: url(../../../build/img/header_proceso.jpg);
}

.header-menu {
  background-image: url(../../../build//img/header_menu.jpg);
}

.header-gallery {
  background-image: url(../../../build/img/header_galeria.jpg);
}

.header-contact {
  background-image: url(../../../build/img/header_contacto.jpg);
}

.main-nav {
  display: flex;
  flex-direction: column;
  margin-top: 5rem;
}
@media (min-width: 768px) {
  .main-nav {
    flex-direction: row;
    gap: 1rem;
    margin-top: 0;
  }
}
.main-nav a {
  text-align: center;
  color: #fff;
  font-size: 2rem;
  text-transform: uppercase;
  font-weight: 700;
  margin-bottom: 1rem;
}
@media (min-width: 768px) {
  .main-nav a {
    margin-bottom: 0;
  }
}
.main-nav a:hover {
  color: #c39c63;
}
.main-nav a.active {
  color: #c39c63;
}

.bar {
  display: flex;
  flex-direction: column;
}
@media (min-width: 768px) {
  .bar {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }
}
.bar .logo {
  width: 50%;
  margin: 0 auto;
}
@media (min-width: 768px) {
  .bar .logo {
    margin: 0;
    width: 20rem;
  }
}

.footer {
  background-color: #5e311e;
}
.footer .footer-content {
  padding: 5rem;
}
@media (min-width: 768px) {
  .footer .footer-content {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
  }
}
.footer .copyright {
  text-align: center;
  margin: 0;
  padding: 2rem;
  color: #fff;
}

.footer-box {
  font-family: "Bona Nova", serif;
  text-align: center;
  margin-bottom: 5rem;
}
@media (min-width: 768px) {
  .footer-box {
    margin-bottom: 0;
  }
}
.footer-box h3 {
  font-family: "Bona Nova", serif;
  margin: 0 0 1rem 0;
  font-size: 2.4rem;
  color: #c39c63;
}
.footer-box p,
.footer-box a {
  font-size: 2rem;
  margin: 0;
}

.main-content {
  background-color: #fff;
  padding: 5rem 2rem;
}
@media (min-width: 768px) {
  .main-content {
    padding: 10rem;
    margin-top: -10rem;
    position: relative;
  }
}

.icons {
  margin-top: 10rem;
}
@media (min-width: 768px) {
  .icons .icons-list {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
  }
}
.icons .icons-list img {
  margin: 0 auto;
  width: 12rem;
}
.icons .icons-list li p {
  font-family: "Bona Nova", serif;
  font-size: 3.2rem;
  color: #5e311e;
}

.gallery {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 2rem;
}
@media (min-width: 1024px) {
  .gallery {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 2rem;
  }
}
.gallery .image img {
  height: 30rem;
  width: 30rem;
  -o-object-fit: cover;
     object-fit: cover;
}
@media (min-width: 1024px) {
  .gallery .image:nth-child(1) {
    grid-row: 1/3;
  }
  .gallery .image:nth-child(1) img {
    height: 62rem;
    -o-object-position: center;
       object-position: center;
  }
  .gallery .image:nth-child(2) {
    grid-column: 2/4;
  }
  .gallery .image:nth-child(2) img {
    width: 62rem;
  }
  .gallery .image:nth-child(4) {
    grid-row: 2/4;
  }
  .gallery .image:nth-child(4) img {
    height: 62rem;
  }
  .gallery .image:nth-child(5) {
    grid-column: 3/5;
  }
  .gallery .image:nth-child(5) img {
    width: 62rem;
  }
  .gallery .image:nth-child(6) {
    grid-column: 3/5;
  }
  .gallery .image:nth-child(6) img {
    width: 62rem;
  }
  .gallery .image:nth-child(7) {
    grid-row: 3/5;
  }
  .gallery .image:nth-child(7) img {
    height: 62rem;
  }
  .gallery .image:nth-child(8) {
    grid-column: 2/5;
  }
  .gallery .image:nth-child(8) img {
    width: 94rem;
  }
  .gallery .image:nth-child(9) {
    grid-column: 1/3;
  }
  .gallery .image:nth-child(9) img {
    width: 62rem;
  }
  .gallery .image:nth-child(10) {
    grid-column: 3/5;
  }
  .gallery .image:nth-child(10) img {
    width: 62rem;
  }
}

.our-menu {
  background-image: url(../../../build/img/menu_arriba.svg), url(../../../build/img/menu_abajo.svg), linear-gradient(to top, #5e311e, #5e311e);
  background-repeat: no-repeat;
  background-position: center 5rem, center 92%, 100%;
  background-size: 200%;
  padding: 15rem 2rem 20rem 2rem;
}
@media (min-width: 768px) {
  .our-menu {
    padding: 15rem 0 20rem 0;
    background-size: 100%;
  }
}
@media (min-width: 1024px) {
  .our-menu {
    background-size: 50%, 50%, 100%;
  }
}

.menu h3 {
  color: #fff;
}
.menu li {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.menu li p {
  color: #fff;
  font-size: 2.2rem;
  line-height: 1.5;
  margin: 0 0 2rem 0;
}
.menu li p span {
  display: block;
  color: #c39c63;
}
.menu li .precio {
  font-size: 4rem;
  font-weight: 700;
}

@media (min-width: 768px) {
  .grid-menu {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 2rem;
  }
}

.our-testimonials {
  padding: 10rem 2rem;
}
@media (min-width: 768px) {
  .our-testimonials {
    padding: 10rem;
  }
}
.our-testimonials .testimonial {
  background-color: #ebe7de;
  padding: 2rem 4rem;
  max-width: 50rem;
  margin: 0 auto;
  border-radius: 1rem;
}
.our-testimonials .testimonial .author {
  text-align: right;
  font-size: 2.4rem;
  color: #5e311e;
  font-family: "Bona Nova", serif;
}

@media (min-width: 768px) {
  .about-content {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 2rem;
  }
}
.about-content .image {
  margin-bottom: 5rem;
}
@media (min-width: 768px) {
  .about-content .image {
    margin: 0 2rem 0 0;
  }
}
.about-content .image img {
  -webkit-transform: rotate(-6deg);
          transform: rotate(-6deg);
  border: 3rem solid #fff;
  box-shadow: 9px 10px 5px -7px rgba(0, 0, 0, 0.35);
}
.about-content .text blockquote {
  margin: 0;
  padding: 1rem;
  border-left: 0.5rem solid #5e311e;
  font-size: 2rem;
}

.coffee-proccess {
  margin-bottom: 2rem;
}
@media (min-width: 768px) {
  .coffee-proccess {
    display: flex;
    gap: 5rem;
    align-items: center;
  }
}
.coffee-proccess:last-of-type {
  margin-bottom: 0;
}
.coffee-proccess:nth-child(even) .text {
  order: -1;
}
.coffee-proccess .image,
.coffee-proccess .text {
  flex: 1;
}
.coffee-proccess .text {
  margin-top: 1rem;
}
.coffee-proccess .text h3 {
  margin: 0;
  text-align: left;
  color: #5e311e;
}
.coffee-proccess .text h3::after {
  content: "";
  display: block;
  width: 50%;
  height: 5px;
  background-color: #c39c63;
}

.menu-content {
  background-image: url(../img/cafe.jpg);
  background-repeat: no-repeat;
  background-position: center bottom;
  background-size: 100%;
  aspect-ratio: 3/8;
}
@media (min-width: 480px) {
  .menu-content {
    aspect-ratio: 3/5;
  }
}
@media (min-width: 768px) {
  .menu-content {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 5rem;
    aspect-ratio: 16/6;
    background-size: 40%;
    background-position: bottom right;
  }
}
.menu-content .text p {
  font-size: 2rem;
}

@media (min-width: 768px) {
  .contact-content {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 5rem;
    background-image: url(../../../build/img/granos_cafe.jpg);
    background-repeat: no-repeat;
    background-position: right center;
  }
}

.form .field {
  margin-bottom: 2rem;
}
.form .field:last-of-type {
  margin-bottom: 0;
}
.form .field label {
  text-transform: uppercase;
  display: block;
  font-size: 2.2rem;
  font-weight: 700;
}
.form .field input:not([type=submit]),
.form .field select {
  width: 100%;
  padding: 1rem;
  border: 0.5rem solid #5e311e;
  background-size: 40%;
}
.form .field input[type=submit] {
  background-color: #5e311e;
  width: 100%;
  border: none;
  padding: 1rem;
  color: #fff;
  text-transform: uppercase;
  font-size: 2.2rem;
  font-weight: 700;
}
.form .field input[type=submit]:hover {
  cursor: pointer;
}

.text-center {
  text-align: center;
}

.bg-primary {
  background-color: #5e311e;
}

.bg-white {
  background-color: #fff;
}

.margin-neg-10 {
  margin-top: -10rem;
}

.padding-bottom-0 {
  padding: 0;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
